[workspace]
members = [
    "account_manager",

    "beacon_node",
    "beacon_node/beacon_chain",
    "beacon_node/client",
    "beacon_node/eth1",
    "beacon_node/eth2_libp2p",
    "beacon_node/http_api",
    "beacon_node/http_metrics",
    "beacon_node/network",
    "beacon_node/store",
    "beacon_node/timer",

	"boot_node",

    "common/account_utils",
    "common/clap_utils",
    "common/compare_fields",
    "common/compare_fields_derive",
    "common/deposit_contract",
    "common/directory",
    "common/eth2",
    "common/eth2_config",
    "common/eth2_interop_keypairs",
    "common/eth2_network_config",
    "common/eth2_wallet_manager",
    "common/hashset_delay",
    "common/lighthouse_metrics",
    "common/lighthouse_version",
    "common/lockfile",
    "common/logging",
    "common/lru_cache",
    "common/remote_signer_consumer",
    "common/slot_clock",
    "common/task_executor",
    "common/test_random_derive",
    "common/validator_dir",
    "common/warp_utils",
    "common/fallback",

    "consensus/cached_tree_hash",
    "consensus/int_to_bytes",
    "consensus/fork_choice",
    "consensus/proto_array",
    "consensus/safe_arith",
    "consensus/ssz",
    "consensus/ssz_derive",
    "consensus/ssz_types",
    "consensus/serde_utils",
    "consensus/state_processing",
    "consensus/swap_or_not_shuffle",
    "consensus/tree_hash",
    "consensus/tree_hash_derive",

    "crypto/bls",
    "crypto/eth2_hashing",
    "crypto/eth2_key_derivation",
    "crypto/eth2_keystore",
    "crypto/eth2_wallet",

    "lcli",

    "lighthouse",
    "lighthouse/environment",

    "remote_signer",
    "remote_signer/backend",
    "remote_signer/client",

    "slasher",
    "slasher/service",

    "testing/ef_tests",
    "testing/eth1_test_rig",
    "testing/node_test_rig",
    "testing/remote_signer_test",
    "testing/simulator",
    "testing/state_transition_vectors",

    "validator_client",
    "validator_client/slashing_protection",
]

[patch]
[patch.crates-io]
tree_hash = { path = "consensus/tree_hash" }
tree_hash_derive = { path = "consensus/tree_hash_derive" }
eth2_ssz = { path = "consensus/ssz" }
eth2_ssz_derive = { path = "consensus/ssz_derive" }
eth2_ssz_types = { path = "consensus/ssz_types" }
eth2_hashing = { path = "crypto/eth2_hashing" }
